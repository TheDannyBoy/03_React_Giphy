{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","evt","preventDefault","categories","type","value","onChange","target","getGifs","searchWord","a","escapedWord","encodeURI","url","fetch","resp","json","data","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","category","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAahD,OAAQ,uBAAMC,SANO,SAAAC,GACnBA,EAAIC,iBACJN,GAAc,SAAAO,GAAU,OAAOL,GAAP,mBAAsBK,OAC9CJ,EAAc,KAGR,UACN,6BAAMD,IACN,uBACEM,KAAK,OACLC,MAAOP,EACPQ,SAfsB,SAAAL,GACxBF,EAAcE,EAAIM,OAAOF,c,+BCSdG,EAhBF,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACA,GACC,mCACTC,EAAcC,UAAUH,GACxBI,EAJQ,iDAIwCF,EAJxC,kBACA,GADA,oBAEC,oCAFD,SAMKG,MAAMD,GANX,cAMRE,EANQ,gBAOSA,EAAKC,OAPd,uBAONC,EAPM,EAONA,KAPM,kBASPA,EAAKC,KAAI,SAAAC,GAAG,YAAK,CACtBC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXR,IAAG,UAAEM,EAAIG,cAAN,aAAE,EAAYC,iBAAiBV,SAZtB,4CAAH,sDCEAW,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOR,EAAU,EAAVA,IACnC,OACE,sBAAKY,UAAU,6CAAf,UACE,qBAAKC,IAAKb,EAAKc,IAAKN,IACpB,4BAAKA,QCDEO,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdhC,mBAAS,CACjCoB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRzB,EAAQqB,GAAUK,MAAK,SAAAC,GACrBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACD,IAEGE,EDX0BK,CAAaP,GAAjCP,EAF0B,EAE/BL,KAAaa,EAFkB,EAElBA,QAErB,OACE,qCACE,oBAAIL,UAAU,wCAAd,SAAwDI,IAEtDC,GAAW,mBAAGL,UAAU,mCAAb,qBACb,qBAAKA,UAAU,YAAf,SAEIH,EAAOJ,KAAI,SAAAmB,GAAK,OACd,cAAC,EAAD,eAAgCA,GAAdA,EAAMjB,aEOrBkB,EApBM,WAAO,IAAD,EACWzC,mBAAS,CAAC,eADrB,mBAClBM,EADkB,KACNP,EADM,KAGzB,OAAQ,qCACN,gDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBACA,6BAEIO,EAAWe,KAAI,SAAAW,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADLA,YCVjBU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.8367f765.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = evt => {\r\n    setInputValue(evt.target.value);\r\n  };\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n    setCategories(categories => ([ inputValue, ...categories ]));\r\n    setInputValue('');\r\n  };\r\n\r\n  return (<form onSubmit={handleSubmit}>\r\n    <h1>{ inputValue }</h1>\r\n    <input\r\n      type='text'\r\n      value={inputValue}\r\n      onChange={handleInputChange}>\r\n    </input>\r\n  </form>)\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n}\r\n","const getGifs = async(searchWord) => {\r\n  const limit = 10;\r\n  const apiKey = 'rVuSlO19gBOeDOHFjXbIhKQeVyOWALie';\r\n  const escapedWord = encodeURI(searchWord); \r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${escapedWord}&limit=${limit}&api_key=${apiKey}`;\r\n\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  return data.map(img => ({\r\n    id: img.id,\r\n    title: img.title,\r\n    url: img.images?.downsized_medium.url,\r\n  }));\r\n};\r\n\r\nexport default getGifs;\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url }) => {\r\n  return (\r\n    <div className='card animate__animated animate__rubberBand'>\r\n      <img src={url} alt={title} />\r\n      <p>{ title }</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data:images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className='animate__animated animate__fadeInLeft'>{ category }</h3>\r\n\r\n      { loading && <p className='animate__animated animate__flash'>Loading</p> }\r\n      <div className='card-grid'>\r\n        {\r\n          images.map(image => (\r\n            <GifGridItem key={image.id} {...image} />\r\n          ))\r\n        }\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string,\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport getGifs from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then(imgs => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category])\r\n\r\n  return state;\r\n};\r\n","import { useState } from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GifGrid } from './GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['Pok√©mon']);\r\n\r\n  return (<>\r\n    <h2> GifExpertApp </h2>\r\n    <AddCategory setCategories={setCategories} />\r\n    <hr/>\r\n    <ol>\r\n      {\r\n        categories.map(category => (\r\n          <GifGrid\r\n            key={category}\r\n            category={category}\r\n          />\r\n        ))\r\n      }\r\n    </ol>\r\n  </>)\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport GifExpertApp from './components/GifExpertApp';\r\n\r\nReactDOM.render(\r\n  <GifExpertApp />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}